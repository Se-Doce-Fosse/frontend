#!/bin/sh

# Obt√©m o nome da branch atual
branch=$(git symbolic-ref --short HEAD 2>/dev/null)

# Verifica se estamos em uma branch v√°lida
if [ -z "$branch" ]; then
  echo "Erro: N√£o foi poss√≠vel determinar a branch atual."
  exit 1
fi

# Exce√ß√µes: branches principais n√£o precisam seguir o padr√£o
if [ "$branch" = "main" ] || [ "$branch" = "develop" ]; then
  echo "‚úÖ Branch '$branch' √© uma branch principal (exce√ß√£o permitida)."
  exit 0
fi

# Verifica se a branch segue o padr√£o: (feat|bugfix|chore)/n√∫meros-descri√ß√£o
if echo "$branch" | grep -qE "^(feat|bugfix|chore)/[0-9]+(-.*)?$"; then
  echo "‚úÖ Nome da branch '$branch' est√° v√°lido."
  exit 0
else
  echo "‚ùå Nome da branch '$branch' √© inv√°lido!"
  echo ""
  echo "üìã Padr√£o esperado:"
  echo "   ‚Ä¢ feat/n√∫mero-ticket[-descri√ß√£o] (ex: feat/123, feat/456-adicionar-login)"
  echo "   ‚Ä¢ bugfix/n√∫mero-ticket[-descri√ß√£o] (ex: bugfix/789, bugfix/101-corrigir-validacao)"
  echo "   ‚Ä¢ chore/n√∫mero-ticket[-descri√ß√£o] (ex: chore/42, chore/999-atualizar-dependencias)"
  echo ""
  echo "üöÄ Exce√ß√µes permitidas:"
  echo "   ‚Ä¢ main (branch principal)"
  echo "   ‚Ä¢ develop (branch de desenvolvimento)"
  echo ""
  echo "üîß Renomeie sua branch usando:"
  echo "   git branch -m nome-atual-da-branch <novo-nome-valido>"
  echo ""
  exit 1
fi
